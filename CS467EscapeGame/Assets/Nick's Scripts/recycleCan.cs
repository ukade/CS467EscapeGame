/* Some of the program below is automatically generated by Unity. The default skeleton script by Unity were adapted by Brian and Nick for our project.

Script developed by Brian and Nick. Some relevant sources are cited in the document in comments. 
See the attached README for a full list of cited sources.
*/

using System.Collections.Generic;
using UnityEngine;

public class garbageCan : MonoBehaviour
{
    // Start is called once before the first execution of Update after the MonoBehaviour is created

    [SerializeField] int totalItems;
    [SerializeField] List<string> itemsInContainer = new List<string>();
    [SerializeField] string garbageType;

    //public GameObject[] trashObjects = GameObject[5];
    //public GameObject[] letterObjects = letterObjects[5];
    [SerializeField] private List<GameObject> letterObjects;
    [SerializeField] private List<GameObject> trashObjects;
    public int trashCollected = 0;
    public float rejectForce;

    void Start()
    {

    }

    // Update is called once per frame
    void Update()
    {

    }

    /* Several sources were learned from/adapted to make the code below. Here are some of the more relevant ones:
    https://docs.unity3d.com/ScriptReference/Collider.OnTriggerEnter.html
    https://docs.unity3d.com/Manual/class-GameObject.html
    https://learn.microsoft.com/en-au/dotnet/csharp/language-reference/builtin-types/arrays
    https://docs.unity3d.com/ScriptReference/Component.GetComponent.html
    https://docs.unity3d.com/ScriptReference/Rigidbody.AddForce.html
    https://docs.unity3d.com/ScriptReference/Vector3.html
    https://docs.unity3d.com/ScriptReference/Vector3-up.html
    Please see the README for a list of all sources cited. 
    */
    private void OnTriggerEnter(Collider other)
        // goal: validate the item thrown in the bin belongs there
        // if yes: spawn a letter
        // if no: spit the item out
    {
        if (other.gameObject.tag == gameObject.tag){
            letterObjects[trashCollected].SetActive(true);
            trashCollected += 1;
            other.gameObject.SetActive(false);
        }
        else {
            Rigidbody otherRigidBody = other.gameObject.GetComponent<Rigidbody>();
            otherRigidBody.AddForce(Vector3.up * rejectForce);
        }
    }
}
